<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	 http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/wswdubu"></property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.default_catalog">wswdubu</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				 <value>classpath*:/pfc/bean</value>
			</list>
		</property>
	</bean>
	<!-- 定义Hibernate的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 定义Spring的事务拦截器 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<!-- 定义需要进行事务拦截的方法及所采用的事务控制类型 -->
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="check*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="delete*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="log*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="cancel*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>
	<aop:config proxy-target-class="true">
		<!-- 切入点 -->
		<aop:pointcut expression="execution(* *.web.*.*(..))"
			id="insert" />
		<aop:aspect id="insertaspect" ref="LogService">
			<aop:before method="log" pointcut-ref="insert" />
			<aop:after method="logArg" pointcut-ref="insert" />
		</aop:aspect>
	</aop:config>
	<bean id="LogService" class="pfc.service.log.impl.LogServiceImpl">
	</bean>
	<bean id="LoginService" class="pfc.service.login.impl.LoginServiceImpl">
	    <property name="userService" ref="UserService"></property>
	</bean>
	<bean id="loginAction" class="pfc.web.LoginAction">
	    <property name="loginService" ref="LoginService"></property>
	</bean>
	<bean id="variableAction" class="pfc.web.VariableAction">
		<property name="variableService" ref="VariableService" />
	</bean>
	<bean id="VariableService" class="pfc.service.variable.impl.VariableServiceImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 定义哪些Service要进行Spring的事务处理 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<!-- 针对指定的bean自动生成业务处理 -->
				<value>*Service</value>
			</list>
		</property>
		<property name="proxyTargetClass" value="true"></property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>
	<bean id="SpringContextHolder" class="pfc.util.SpringContextHolder"></bean>
	<import resource="applicationContext-sys.xml" />
	<import resource="applicationContext-shiro.xml" />


</beans>